# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
#
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: branch
      type: string
      description: The git branch to clone.
      default: main
    - name: build-image
      type: string
      description: The name and tag of the output image
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.branch)
      - name: subdirectory
        value: ""
      - name: deleteExisting
        value: "true"
      runAfter:
        - init

    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: flake8
      params:
      - name: image
        value: "python:3.9-slim"
      - name: args
        value: ["--count","--max-complexity=10","--max-line-length=127","--statistics"]
      runAfter:
        - clone

    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
      - name: database_uri
        value: "sqlite:///test.db"
      - name: args
        value: "-v --with-spec --spec-color"
      runAfter:
        - clone

    - name: build
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
      - name: IMAGE
        value: "$(params.build-image)"
      - name: CONTEXT
        value: "$(workspaces.source.path)"
      - name: DOCKERFILE
        value: "./Dockerfile"
      runAfter:
        - tests
        - lint